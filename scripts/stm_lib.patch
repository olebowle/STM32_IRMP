diff -purN a/eeprom.h b/eeprom.h
--- a/eeprom.h	2009-08-04 16:25:52.000000000 +0200
+++ b/eeprom.h	2014-11-14 18:13:53.700521744 +0100
@@ -25,6 +25,7 @@
 
 /* Includes ------------------------------------------------------------------*/
 #include "stm32f10x.h"
+#include "stm32f10x_flash.h"
 
 /* Exported constants --------------------------------------------------------*/
 /* Define the STM32F10Xxx Flash page size depending on the used STM32 device */
@@ -35,8 +36,8 @@
 #endif
 
 /* EEPROM start address in Flash */
-#define EEPROM_START_ADDRESS    ((uint32_t)0x08010000) /* EEPROM emulation start address:
-                                                  after 64KByte of used Flash memory */
+#define EEPROM_START_ADDRESS	((uint32_t)0x0801F800)	/* F103C8 has actually 128k = 0x20000 Flash */
+							/* 0x8020000 - 2 * 0x400 = 0x801F800 */
 
 /* Pages 0 and 1 base and end addresses */
 #define PAGE0_BASE_ADDRESS      ((uint32_t)(EEPROM_START_ADDRESS + 0x000))
@@ -65,7 +66,7 @@
 #define PAGE_FULL               ((uint8_t)0x80)
 
 /* Variables' number */
-#define NumbOfVar               ((uint8_t)0x03)
+#define NumbOfVar		((uint8_t)0x0F)
 
 /* Exported types ------------------------------------------------------------*/
 /* Exported macro ------------------------------------------------------------*/
diff -purN a/hw_config.c b/hw_config.c
--- a/hw_config.c	2013-01-21 19:27:28.000000000 +0100
+++ b/hw_config.c	2014-11-14 18:13:53.700521744 +0100
@@ -43,6 +43,7 @@ uint32_t ADC_ConvertedValueX_1 = 0;
 __IO uint16_t  ADC1ConvertedValue = 0, ADC1ConvertedVoltage = 0, calibration_value = 0;
 
 /* Extern variables ----------------------------------------------------------*/
+extern __IO uint8_t PrevXferComplete;
 /* Private function prototypes -----------------------------------------------*/
 static void IntToUnicode (uint32_t value , uint8_t *pbuf , uint8_t len);
 /* Private functions ---------------------------------------------------------*/
@@ -78,14 +79,16 @@ void Set_System(void)
   
 #if !defined(STM32L1XX_MD) && !defined(STM32L1XX_HD) && !defined(STM32L1XX_MD_PLUS) && !defined(STM32F37X) && !defined(STM32F30X)
   /* Enable USB_DISCONNECT GPIO clock */
-  RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIO_DISCONNECT, ENABLE);
+  //RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIO_DISCONNECT, ENABLE);
   
   /* ADCCLK = PCLK2/8 */
-  RCC_ADCCLKConfig(RCC_PCLK2_Div8);    
+  //RCC_ADCCLKConfig(RCC_PCLK2_Div8);    
 #endif /* STM32L1XX_XD */
   
   /* Configure the used GPIOs*/
   GPIO_Configuration();
+  /* Enable the PWR clock */
+  RCC_APB1PeriphClockCmd(RCC_APB1Periph_PWR, ENABLE);
   
 #if defined(USB_USE_EXTERNAL_PULLUP)
   /* Enable the USB disconnect GPIO clock */
@@ -135,21 +138,23 @@ void Set_System(void)
   STM_EVAL_PBInit(Button_RIGHT, Mode_EXTI);
 #else  
   /* Configure the KEY button in EXTI mode */
-  STM_EVAL_PBInit(Button_KEY, Mode_EXTI);
+  //STM_EVAL_PBInit(Button_KEY, Mode_EXTI);
 #if !defined(STM32L1XX_HD)&& !defined(STM32L1XX_MD_PLUS) && !defined(STM32F37X) && !defined(STM32F30X) 
   /* Configure the Tamper button in EXTI mode */
-  STM_EVAL_PBInit(Button_TAMPER, Mode_EXTI);
+  //STM_EVAL_PBInit(Button_TAMPER, Mode_EXTI);
 #endif /* STM32L1XX_XD */
 #endif  
   /* Additional EXTI configuration (configure both edges) */
   EXTI_Configuration();
   
   /* Configure the LEDs */
+#if 0
   STM_EVAL_LEDInit(LED1);
   STM_EVAL_LEDInit(LED2);
   STM_EVAL_LEDInit(LED3);
   STM_EVAL_LEDInit(LED4);
-  
+#endif
+
 #if defined (STM32F30X)
   ADC30x_Configuration();
 #else  
@@ -192,6 +197,9 @@ void Enter_LowPowerMode(void)
 {
   /* Set the device state to suspend */
   bDeviceState = SUSPENDED;
+
+  /* Request to enter STOP mode with regulator in low power mode */
+  PWR_EnterSTOPMode(PWR_Regulator_LowPower, PWR_STOPEntry_WFI);
 }
 
 /*******************************************************************************
@@ -281,7 +289,7 @@ void USB_Interrupts_Config(void)
   NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
   NVIC_Init(&NVIC_InitStructure);
 #endif /* STM32L1XX_XD */
-  
+#if 0
   /* Enable the EXTI9_5 Interrupt */
   NVIC_InitStructure.NVIC_IRQChannel = EXTI9_5_IRQn;
   NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
@@ -296,7 +304,7 @@ void USB_Interrupts_Config(void)
   NVIC_InitStructure.NVIC_IRQChannel = DMA1_Channel1_IRQn;
   NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 2;
   NVIC_Init(&NVIC_InitStructure);
-  
+#endif
 }
 
 /*******************************************************************************
@@ -308,7 +316,7 @@ void USB_Interrupts_Config(void)
 *******************************************************************************/
 void USB_Cable_Config (FunctionalState NewState)
 { 
-#if defined(STM32L1XX_MD) || defined (STM32L1XX_HD)|| (STM32L1XX_MD_PLUS)
+#if 0
   if (NewState != DISABLE)
   {
     STM32L15_USB_CONNECT;
@@ -318,7 +326,6 @@ void USB_Cable_Config (FunctionalState N
     STM32L15_USB_DISCONNECT;
   }  
   
-#else /* USE_STM3210B_EVAL or USE_STM3210E_EVAL */
   if (NewState != DISABLE)
   {
     GPIO_ResetBits(USB_DISCONNECT, USB_DISCONNECT_PIN);
@@ -339,6 +346,7 @@ void USB_Cable_Config (FunctionalState N
 *******************************************************************************/
 void GPIO_Configuration(void)
 {
+#if 0
   GPIO_InitTypeDef GPIO_InitStructure;
   
 #if defined(STM32L1XX_MD) || defined(STM32L1XX_HD)|| defined(STM32L1XX_MD_PLUS) || defined (STM32F37X) || defined (STM32F30X)
@@ -359,6 +367,7 @@ void GPIO_Configuration(void)
   GPIO_InitStructure.GPIO_Pin = GPIO_IOAIN_PIN;
   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN;
   GPIO_Init(GPIO_IOAIN, &GPIO_InitStructure);
+#endif
 }
 
 /*******************************************************************************
@@ -372,7 +381,7 @@ void EXTI_Configuration(void)
 {
   EXTI_InitTypeDef EXTI_InitStructure;
   
-#if defined (USE_STM32L152_EVAL)
+#if 0
   /* Configure RIGHT EXTI line to generate an interrupt on rising & falling edges */  
   EXTI_InitStructure.EXTI_Line = RIGHT_BUTTON_EXTI_LINE;
   EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
@@ -390,7 +399,6 @@ void EXTI_Configuration(void)
   /* Clear the LEFT EXTI line pending bit */
   EXTI_ClearITPendingBit(LEFT_BUTTON_EXTI_LINE);
   
-#else    
   /* Configure Key EXTI line to generate an interrupt on rising & falling edges */  
   EXTI_InitStructure.EXTI_Line = KEY_BUTTON_EXTI_LINE;
   EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
@@ -431,6 +439,7 @@ void EXTI_Configuration(void)
 *******************************************************************************/
 void ADC_Configuration(void)
 {
+#if 0
   ADC_InitTypeDef       ADC_InitStructure;
   DMA_InitTypeDef DMA_InitStructure;
   /* Enable DMA1 clock */
@@ -524,6 +533,7 @@ void ADC_Configuration(void)
   while(ADC_GetCalibrationStatus(ADC1));  
   
 #endif /* STM32L1XX_XD */ 
+#endif
 }
 #endif /* STM32F30x */
 /*******************************************************************************
@@ -674,4 +684,29 @@ void ADC30x_Configuration(void)
 }
 
 #endif
+
+/*******************************************************************************
+* Function Name : HID_SendData.
+* Description   : send USB_HID_IN_BUF, STM32->PC
+* Input         : None.
+* Output        : None.
+* Return value  : The state value.
+*******************************************************************************/
+extern uint8_t USB_HID_IN_BUF[HID_IN_BUFFER_SIZE+1];
+uint8_t HID_SendData(void)
+{
+    uint8_t retVal;
+//	USB_HID_IN_BUF[0] = 4;
+
+    /* Reset the control token to inform upper layer that a transfer is ongoing */
+    PrevXferComplete = 0;
+
+    /* Copy USB_HID_IN_BUF in ENDP1 Tx Packet Memory Area*/
+    retVal = USB_SIL_Write(EP1_IN, USB_HID_IN_BUF, HID_IN_BUFFER_SIZE+1);
+    /* Enable endpoint for transmission */
+    SetEPTxValid(ENDP1);
+
+    return retVal;
+}
+
 /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/
diff -purN a/hw_config.h b/hw_config.h
--- a/hw_config.h	2013-01-21 19:27:28.000000000 +0100
+++ b/hw_config.h	2014-11-14 18:13:53.700521744 +0100
@@ -52,6 +52,7 @@ void ADC30x_Configuration(void);
 void Get_SerialNum(void);
 void TimingDelay_Decrement(void);
 void Delay(__IO uint32_t nCount);
+uint8_t HID_SendData(void);
 
 #endif  /*__HW_CONFIG_H*/
 
diff -purN a/platform_config.h b/platform_config.h
--- a/platform_config.h	1970-01-01 01:00:00.000000000 +0100
+++ b/platform_config.h	2014-11-14 18:13:53.700521744 +0100
@@ -0,0 +1,10 @@
+#ifndef __PLATFORM_CONFIG_H
+#define __PLATFORM_CONFIG_H
+
+#include "stm32f10x.h"
+
+#define	ID1	(0x1FFFF7E8)
+#define	ID2	(0x1FFFF7EC)
+#define	ID3	(0x1FFFF7F0)
+
+#endif /* __PLATFORM_CONFIG_H */
diff -purN a/stm32f10x_conf.h b/stm32f10x_conf.h
--- a/stm32f10x_conf.h	2013-01-21 19:27:28.000000000 +0100
+++ b/stm32f10x_conf.h	2014-11-14 18:13:53.700521744 +0100
@@ -32,6 +32,7 @@
 
 /* Includes ------------------------------------------------------------------*/
 /* Uncomment the line below to enable peripheral header file inclusion */
+#if 0
 #include "stm32f10x_adc.h"
 #include "stm32f10x_bkp.h"
 #include "stm32f10x_can.h"
@@ -39,20 +40,21 @@
 #include "stm32f10x_dac.h"
 #include "stm32f10x_dbgmcu.h"
 #include "stm32f10x_dma.h"
-#include "stm32f10x_exti.h"
 #include "stm32f10x_flash.h"
 #include "stm32f10x_fsmc.h"
-#include "stm32f10x_gpio.h"
 #include "stm32f10x_i2c.h" 
 #include "stm32f10x_iwdg.h"
-#include "stm32f10x_pwr.h"
-#include "stm32f10x_rcc.h"
 #include "stm32f10x_rtc.h"
 #include "stm32f10x_sdio.h"
 #include "stm32f10x_spi.h"
 #include "stm32f10x_tim.h"
 #include "stm32f10x_usart.h"
 #include "stm32f10x_wwdg.h"
+#endif
+#include "stm32f10x_exti.h"
+#include "stm32f10x_gpio.h"
+#include "stm32f10x_pwr.h"
+#include "stm32f10x_rcc.h"
 #include "misc.h"   /* High level functions for NVIC and SysTick (add-on to CMSIS functions) */
 
 /* Exported types ------------------------------------------------------------*/
diff -purN a/stm32_it.c b/stm32_it.c
--- a/stm32_it.c	2013-01-21 19:27:28.000000000 +0100
+++ b/stm32_it.c	2014-11-14 18:13:53.700521744 +0100
@@ -164,11 +164,12 @@ void PendSV_Handler(void)
 * Output         : None
 * Return         : None
 *******************************************************************************/
+#if 0
 void SysTick_Handler(void)
 {
     TimingDelay--;
 }
-
+#endif
 /******************************************************************************/
 /*            STM32 Peripherals Interrupt Handlers                        */
 /******************************************************************************/
@@ -262,6 +263,7 @@ void EXTI15_10_IRQHandler(void)
 * Output         : None
 * Return         : None
 *******************************************************************************/
+#if 0
 void DMA1_Channel1_IRQHandler(void)
 {  
   Send_Buffer[0] = 0x07;
@@ -282,7 +284,6 @@ void DMA1_Channel1_IRQHandler(void)
   
   DMA_ClearFlag(DMA1_FLAG_TC1);
 }
-
 /*******************************************************************************
 * Function Name  : EXTI_IRQHandler
 * Description    : This function handles External lines interrupt request.
@@ -325,6 +326,7 @@ void EXTI9_5_IRQHandler(void)
     EXTI_ClearITPendingBit(KEY_BUTTON_EXTI_LINE);
   }
 }
+
 #if !defined(STM32L1XX_MD) &&  !defined(STM32L1XX_HD) && !defined(STM32L1XX_MD_PLUS)&& ! defined (STM32F37X) && ! defined (STM32F30X)
 /*******************************************************************************
 * Function Name  : EXTI15_10_IRQHandler
@@ -363,7 +365,7 @@ void EXTI15_10_IRQHandler(void)
 }
 
 #endif /*STM32L1XX_HD*/
-
+#endif
 /*******************************************************************************
 * Function Name  : USB_FS_WKUP_IRQHandler
 * Description    : This function handles USB WakeUp interrupt request.
diff -purN a/usb_conf.h b/usb_conf.h
--- a/usb_conf.h	2013-01-21 19:27:28.000000000 +0100
+++ b/usb_conf.h	2014-11-14 18:13:53.700521744 +0100
@@ -57,7 +57,7 @@
 /* EP1  */
 /* tx buffer base address */
 #define ENDP1_TXADDR        (0x100)
-#define ENDP1_RXADDR        (0x104)
+#define ENDP1_RXADDR        (0x140)
 
 /*-------------------------------------------------------------*/
 /* -------------------   ISTR events  -------------------------*/
@@ -66,7 +66,7 @@
 /* mask defining which events has to be handled */
 /* by the device application software */
 
-#define IMR_MSK (CNTR_CTRM  | CNTR_WKUPM | CNTR_SUSPM | CNTR_ERRM  | CNTR_SOFM \
+#define IMR_MSK (CNTR_CTRM  | CNTR_WKUPM | CNTR_ERRM  | CNTR_SOFM \
                  | CNTR_ESOFM | CNTR_RESETM )
 
 /* CTR service routines */
diff -purN a/usb_desc.c b/usb_desc.c
--- a/usb_desc.c	2013-01-21 19:27:28.000000000 +0100
+++ b/usb_desc.c	2014-11-14 18:13:53.700521744 +0100
@@ -41,7 +41,7 @@
 /* USB Standard Device Descriptor */
 const uint8_t CustomHID_DeviceDescriptor[CUSTOMHID_SIZ_DEVICE_DESC] =
   {
-    0x12,                       /*bLength */
+    CUSTOMHID_SIZ_DEVICE_DESC,  /*bLength */
     USB_DEVICE_DESCRIPTOR_TYPE, /*bDescriptorType*/
     0x00,                       /*bcdUSB */
     0x02,
@@ -79,7 +79,7 @@ const uint8_t CustomHID_ConfigDescriptor
     0x01,         /* bConfigurationValue: Configuration value */
     0x00,         /* iConfiguration: Index of string descriptor describing
                                  the configuration*/
-    0xC0,         /* bmAttributes: Self powered */
+    0xE0,         /* bmAttributes: Self powered */
     0x32,         /* MaxPower 100 mA: this current is used for detecting Vbus */
 
     /************** Descriptor of Custom HID interface ****************/
@@ -101,7 +101,7 @@ const uint8_t CustomHID_ConfigDescriptor
     0x01,
     0x00,         /* bCountryCode: Hardware target country */
     0x01,         /* bNumDescriptors: Number of HID class descriptors to follow */
-    0x22,         /* bDescriptorType */
+    HID_REPORT_DESCRIPTOR_TYPE,         /* bDescriptorType */
     CUSTOMHID_SIZ_REPORT_DESC,/* wItemLength: Total length of Report descriptor */
     0x00,
     /******************** Descriptor of Custom HID endpoints ******************/
@@ -111,20 +111,18 @@ const uint8_t CustomHID_ConfigDescriptor
 
     0x81,          /* bEndpointAddress: Endpoint Address (IN) */
     0x03,          /* bmAttributes: Interrupt endpoint */
-    0x02,          /* wMaxPacketSize: 2 Bytes max */
+    HID_IN_BUFFER_SIZE+1,          /* wMaxPacketSize */
     0x00,
-    0x20,          /* bInterval: Polling Interval (32 ms) */
+    HID_IN_INTERVAL,          /* bInterval: Polling Interval */
     /* 34 */
     	
     0x07,	/* bLength: Endpoint Descriptor size */
     USB_ENDPOINT_DESCRIPTOR_TYPE,	/* bDescriptorType: */
-			/*	Endpoint descriptor type */
-    0x01,	/* bEndpointAddress: */
-			/*	Endpoint Address (OUT) */
+    0x01,	/* bEndpointAddress: Endpoint Address (OUT) */
     0x03,	/* bmAttributes: Interrupt endpoint */
-    0x02,	/* wMaxPacketSize: 2 Bytes max  */
+    HID_OUT_BUFFER_SIZE+1,	/* wMaxPacketSize */
     0x00,
-    0x20,	/* bInterval: Polling Interval (20 ms) */
+    HID_OUT_INTERVAL	/* bInterval: Polling Interval */
     /* 41 */
   }
   ; /* CustomHID_ConfigDescriptor */
@@ -135,9 +133,8 @@ const uint8_t CustomHID_ReportDescriptor
     0xa1, 0x01,            /* COLLECTION (Application)       */            
     /* 6 */
     
-    /* Led 1 */        
     0x85, 0x01,            /*     REPORT_ID (1)		     */
-    0x09, 0x01,            /*     USAGE (LED 1)	             */
+    0x09, 0x01,            /*     USAGE (Vendor Usage 1)     */
     0x15, 0x00,            /*     LOGICAL_MINIMUM (0)        */          
     0x25, 0x01,            /*     LOGICAL_MAXIMUM (1)        */           
     0x75, 0x08,            /*     REPORT_SIZE (8)            */        
@@ -145,13 +142,12 @@ const uint8_t CustomHID_ReportDescriptor
     0xB1, 0x82,             /*    FEATURE (Data,Var,Abs,Vol) */     
 
     0x85, 0x01,            /*     REPORT_ID (1)              */
-    0x09, 0x01,            /*     USAGE (LED 1)              */
+    0x09, 0x01,            /*     USAGE (Vendor Usage 1)     */
     0x91, 0x82,            /*     OUTPUT (Data,Var,Abs,Vol)  */
     /* 26 */
     
-    /* Led 2 */
     0x85, 0x02,            /*     REPORT_ID 2		     */
-    0x09, 0x02,            /*     USAGE (LED 2)	             */
+    0x09, 0x02,            /*     USAGE (Vendor Usage 2)	             */
     0x15, 0x00,            /*     LOGICAL_MINIMUM (0)        */          
     0x25, 0x01,            /*     LOGICAL_MAXIMUM (1)        */           
     0x75, 0x08,            /*     REPORT_SIZE (8)            */        
@@ -159,89 +155,29 @@ const uint8_t CustomHID_ReportDescriptor
     0xB1, 0x82,             /*    FEATURE (Data,Var,Abs,Vol) */     
 
     0x85, 0x02,            /*     REPORT_ID (2)              */
-    0x09, 0x02,            /*     USAGE (LED 2)              */
+    0x09, 0x02,            /*     USAGE (Vendor Usage 2)     */
     0x91, 0x82,            /*     OUTPUT (Data,Var,Abs,Vol)  */
     /* 46 */
     
-    /* Led 3 */        
     0x85, 0x03,            /*     REPORT_ID (3)		     */
-    0x09, 0x03,            /*     USAGE (LED 3)	             */
+    0x09, 0x03,            /*     USAGE (Vendor Usage 3)	             */
     0x15, 0x00,            /*     LOGICAL_MINIMUM (0)        */          
-    0x25, 0x01,            /*     LOGICAL_MAXIMUM (1)        */           
+    0x26, 0xff, 0x00,      /*     LOGICAL_MAXIMUM (255)      */           
     0x75, 0x08,            /*     REPORT_SIZE (8)            */        
-    0x95, 0x01,            /*     REPORT_COUNT (1)           */       
+    0x95, HID_OUT_BUFFER_SIZE,  /*   REPORT_COUNT (N)        */       
     0xB1, 0x82,             /*    FEATURE (Data,Var,Abs,Vol) */     
 
     0x85, 0x03,            /*     REPORT_ID (3)              */
-    0x09, 0x03,            /*     USAGE (LED 3)              */
+    0x09, 0x03,            /*     USAGE (Vendor Usage 3)     */
     0x91, 0x82,            /*     OUTPUT (Data,Var,Abs,Vol)  */
-    /* 66 */
+    /* 68 */
     
-    /* Led 4 */
     0x85, 0x04,            /*     REPORT_ID 4)		     */
-    0x09, 0x04,            /*     USAGE (LED 4)	             */
-    0x15, 0x00,            /*     LOGICAL_MINIMUM (0)        */          
-    0x25, 0x01,            /*     LOGICAL_MAXIMUM (1)        */           
+    0x09, 0x04,            /*     USAGE (Vendor Usage 4)	             */
     0x75, 0x08,            /*     REPORT_SIZE (8)            */        
-    0x95, 0x01,            /*     REPORT_COUNT (1)           */       
-    0xB1, 0x82,            /*     FEATURE (Data,Var,Abs,Vol) */     
-
-    0x85, 0x04,            /*     REPORT_ID (4)              */
-    0x09, 0x04,            /*     USAGE (LED 4)              */
-    0x91, 0x82,            /*     OUTPUT (Data,Var,Abs,Vol)  */
-    /* 86 */
-    
-    /* key Push Button */  
-    0x85, 0x05,            /*     REPORT_ID (5)              */
-    0x09, 0x05,            /*     USAGE (Push Button)        */      
-    0x15, 0x00,            /*     LOGICAL_MINIMUM (0)        */      
-    0x25, 0x01,            /*     LOGICAL_MAXIMUM (1)        */      
-    0x75, 0x01,            /*     REPORT_SIZE (1)            */  
-    0x81, 0x82,            /*     INPUT (Data,Var,Abs,Vol)   */   
-    
-    0x09, 0x05,            /*     USAGE (Push Button)        */               
-    0x75, 0x01,            /*     REPORT_SIZE (1)            */           
-    0xb1, 0x82,            /*     FEATURE (Data,Var,Abs,Vol) */  
-         
-    0x75, 0x07,            /*     REPORT_SIZE (7)            */           
-    0x81, 0x83,            /*     INPUT (Cnst,Var,Abs,Vol)   */                    
-    0x85, 0x05,            /*     REPORT_ID (2)              */         
-                    
-    0x75, 0x07,            /*     REPORT_SIZE (7)            */           
-    0xb1, 0x83,            /*     FEATURE (Cnst,Var,Abs,Vol) */                      
-    /* 114 */
-
-    /* Tamper Push Button */  
-    0x85, 0x06,            /*     REPORT_ID (6)              */
-    0x09, 0x06,            /*     USAGE (Tamper Push Button) */      
-    0x15, 0x00,            /*     LOGICAL_MINIMUM (0)        */      
-    0x25, 0x01,            /*     LOGICAL_MAXIMUM (1)        */      
-    0x75, 0x01,            /*     REPORT_SIZE (1)            */  
+    0x95, HID_IN_BUFFER_SIZE,   /*   REPORT_COUNT (N)        */       
     0x81, 0x82,            /*     INPUT (Data,Var,Abs,Vol)   */   
-    
-    0x09, 0x06,            /*     USAGE (Tamper Push Button) */               
-    0x75, 0x01,            /*     REPORT_SIZE (1)            */           
-    0xb1, 0x82,            /*     FEATURE (Data,Var,Abs,Vol) */  
-         
-    0x75, 0x07,            /*     REPORT_SIZE (7)            */           
-    0x81, 0x83,            /*     INPUT (Cnst,Var,Abs,Vol)   */                    
-    0x85, 0x06,            /*     REPORT_ID (6)              */         
-                    
-    0x75, 0x07,            /*     REPORT_SIZE (7)            */           
-    0xb1, 0x83,            /*     FEATURE (Cnst,Var,Abs,Vol) */  
-    /* 142 */
-    
-    /* ADC IN */
-    0x85, 0x07,            /*     REPORT_ID (7)              */         
-    0x09, 0x07,            /*     USAGE (ADC IN)             */          
-    0x15, 0x00,            /*     LOGICAL_MINIMUM (0)        */               
-    0x26, 0xff, 0x00,      /*     LOGICAL_MAXIMUM (255)      */                 
-    0x75, 0x08,            /*     REPORT_SIZE (8)            */           
-    0x81, 0x82,            /*     INPUT (Data,Var,Abs,Vol)   */                    
-    0x85, 0x07,            /*     REPORT_ID (7)              */                 
-    0x09, 0x07,            /*     USAGE (ADC in)             */                     
-    0xb1, 0x82,            /*     FEATURE (Data,Var,Abs,Vol) */                                 
-    /* 161 */
+    /* 78 */
 
     0xc0 	          /*     END_COLLECTION	             */
   }; /* CustomHID_ReportDescriptor */
@@ -270,16 +206,16 @@ const uint8_t CustomHID_StringProduct[CU
   {
     CUSTOMHID_SIZ_STRING_PRODUCT,          /* bLength */
     USB_STRING_DESCRIPTOR_TYPE,        /* bDescriptorType */
-    'S', 0, 'T', 0, 'M', 0, '3', 0, '2', 0, ' ', 0, 'C', 0,
-    'u', 0, 's', 0, 't', 0, 'm', 0, ' ', 0, 'H', 0, 'I', 0,
-    'D', 0
+    'S', 0, 'T', 0, 'M', 0, '3', 0, '2', 0, ' ', 0, 'I', 0,
+    'R', 0, 'M', 0, 'P', 0, ' ', 0, 'H', 0, 'I', 0, 'D', 0,
+    '-', 0, 'D', 0, 'e', 0, 'v', 0, 'i', 0, 'c', 0, 'e', 0
   };
 uint8_t CustomHID_StringSerial[CUSTOMHID_SIZ_STRING_SERIAL] =
   {
     CUSTOMHID_SIZ_STRING_SERIAL,           /* bLength */
     USB_STRING_DESCRIPTOR_TYPE,        /* bDescriptorType */
-    'S', 0, 'T', 0, 'M', 0,'3', 0,'2', 0
+    'S', 0, 'T', 0, 'M', 0,'3', 0,'2', 0 , '0', 0, '0', 0, '0', 0,'0', 0,'0', 0,
+    '0', 0, '0', 0
   };
 
 /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/
-
diff -purN a/usb_desc.h b/usb_desc.h
--- a/usb_desc.h	2013-01-21 19:27:28.000000000 +0100
+++ b/usb_desc.h	2014-11-14 18:13:53.700521744 +0100
@@ -31,6 +31,7 @@
 #define __USB_DESC_H
 
 /* Includes ------------------------------------------------------------------*/
+#include "usb_hid.h"
 /* Exported types ------------------------------------------------------------*/
 /* Exported constants --------------------------------------------------------*/
 /* Exported macro ------------------------------------------------------------*/
@@ -44,17 +45,23 @@
 #define HID_DESCRIPTOR_TYPE                     0x21
 #define CUSTOMHID_SIZ_HID_DESC                  0x09
 #define CUSTOMHID_OFF_HID_DESC                  0x12
+#define HID_REPORT_DESCRIPTOR_TYPE              0x22
 
 #define CUSTOMHID_SIZ_DEVICE_DESC               18
 #define CUSTOMHID_SIZ_CONFIG_DESC               41
-#define CUSTOMHID_SIZ_REPORT_DESC               163
+#define CUSTOMHID_SIZ_REPORT_DESC               79
 #define CUSTOMHID_SIZ_STRING_LANGID             4
 #define CUSTOMHID_SIZ_STRING_VENDOR             38
-#define CUSTOMHID_SIZ_STRING_PRODUCT            32
+#define CUSTOMHID_SIZ_STRING_PRODUCT            44
 #define CUSTOMHID_SIZ_STRING_SERIAL             26
 
 #define STANDARD_ENDPOINT_DESC_SIZE             0x09
 
+//HID Maximum packet size in bytes
+#define wMaxPacketSize  0x40
+#define EP1TxCount wMaxPacketSize
+#define EP1RxCount wMaxPacketSize
+
 /* Exported functions ------------------------------------------------------- */
 extern const uint8_t CustomHID_DeviceDescriptor[CUSTOMHID_SIZ_DEVICE_DESC];
 extern const uint8_t CustomHID_ConfigDescriptor[CUSTOMHID_SIZ_CONFIG_DESC];
diff -purN a/usb_endp.c b/usb_endp.c
--- a/usb_endp.c	2013-01-21 19:27:28.000000000 +0100
+++ b/usb_endp.c	2014-11-14 18:13:53.700521744 +0100
@@ -29,6 +29,7 @@
 /* Includes ------------------------------------------------------------------*/
 
 #include "hw_config.h"
+#include "usb_desc.h"
 #include "usb_lib.h"
 #include "usb_istr.h"
 
@@ -37,7 +38,10 @@
 /* Private macro -------------------------------------------------------------*/
 /* Private variables ---------------------------------------------------------*/
 uint8_t Receive_Buffer[2];
+extern uint8_t USB_HID_OUT_BUF[HID_OUT_BUFFER_SIZE+1];
 extern __IO uint8_t PrevXferComplete;
+extern uint16_t USB_HID_RecData_Len;
+extern uint8_t USB_HID_RecData_Ready;
 /* Private function prototypes -----------------------------------------------*/
 /* Private functions ---------------------------------------------------------*/
 /*******************************************************************************
@@ -49,6 +53,7 @@ extern __IO uint8_t PrevXferComplete;
 *******************************************************************************/
 void EP1_OUT_Callback(void)
 {
+#if 0
   BitAction Led_State;
 
   /* Read received data (2 bytes) */  
@@ -113,7 +118,11 @@ void EP1_OUT_Callback(void)
     STM_EVAL_LEDOff(LED4); 
     break;
   }
- 
+#endif
+  /* Read received data */
+  USB_HID_RecData_Len = USB_SIL_Read(EP1_OUT, USB_HID_OUT_BUF);
+  USB_HID_RecData_Ready=1;
+
   SetEPRxStatus(ENDP1, EP_RX_VALID);
  
 }
diff -purN a/usb_istr.c b/usb_istr.c
--- a/usb_istr.c	2013-01-21 19:27:28.000000000 +0100
+++ b/usb_istr.c	2014-11-14 18:13:53.700521744 +0100
@@ -140,7 +140,7 @@ void USB_Istr(void)
   {
 
     /* check if SUSPEND is possible */
-    if (fSuspendEnabled)
+    if (fSuspendEnabled && (bDeviceState==CONFIGURED))
     {
       Suspend();
     }
diff -purN a/usb_prop.c b/usb_prop.c
--- a/usb_prop.c	2013-01-21 19:27:28.000000000 +0100
+++ b/usb_prop.c	2014-11-14 18:13:53.700521744 +0100
@@ -43,7 +43,7 @@
 uint32_t ProtocolValue;
 __IO uint8_t EXTI_Enable;
 __IO uint8_t Request = 0;
-uint8_t Report_Buf[2];   
+uint8_t Report_Buf[wMaxPacketSize];
 /* -------------------------------------------------------------------------- */
 /*  Structures initializations */
 /* -------------------------------------------------------------------------- */
@@ -177,8 +177,8 @@ void CustomHID_Reset(void)
   SetEPType(ENDP1, EP_INTERRUPT);
   SetEPTxAddr(ENDP1, ENDP1_TXADDR);
   SetEPRxAddr(ENDP1, ENDP1_RXADDR);
-  SetEPTxCount(ENDP1, 2);
-  SetEPRxCount(ENDP1, 2);
+  SetEPTxCount(ENDP1, EP1TxCount);
+  SetEPRxCount(ENDP1, EP1RxCount);
   SetEPRxStatus(ENDP1, EP_RX_VALID);
   SetEPTxStatus(ENDP1, EP_TX_NAK);
 
@@ -196,7 +196,8 @@ void CustomHID_Reset(void)
 *******************************************************************************/
 void CustomHID_SetConfiguration(void)
 {
-  if (pInformation->Current_Configuration != 0)
+  DEVICE_INFO *pInfo = &Device_Info;
+  if (pInfo->Current_Configuration != 0)
   {
     /* Device configured */
     bDeviceState = CONFIGURED;
@@ -207,7 +208,7 @@ void CustomHID_SetConfiguration(void)
 #elif defined (STM32F30X)
     ADC_StartConversion(ADC1);
 #else
-    ADC_SoftwareStartConvCmd(ADC1, ENABLE);
+    //ADC_SoftwareStartConvCmd(ADC1, ENABLE);
 #endif /* STM32L1XX_XD */
   }
 }
@@ -231,6 +232,7 @@ void CustomHID_SetDeviceAddress (void)
 *******************************************************************************/
 void CustomHID_Status_In(void)
 {  
+#if 0
   BitAction Led_State;
   
   if (Report_Buf[1] == 0)
@@ -293,6 +295,7 @@ void CustomHID_Status_In(void)
     STM_EVAL_LEDOff(LED4); 
     break;
   }
+#endif
 }
 
 /*******************************************************************************
@@ -317,14 +320,14 @@ RESULT CustomHID_Data_Setup(uint8_t Requ
 {
   uint8_t *(*CopyRoutine)(uint16_t);
   
-  if (pInformation->USBwIndex != 0) 
-    return USB_UNSUPPORT;    
+  //if (pInformation->USBwIndex != 0) 
+  //  return USB_UNSUPPORT;    
   
   CopyRoutine = NULL;
   
   if ((RequestNo == GET_DESCRIPTOR)
       && (Type_Recipient == (STANDARD_REQUEST | INTERFACE_RECIPIENT))
-        )
+      && (pInformation->USBwIndex0 == 0))
   {
     
     if (pInformation->USBwValue1 == REPORT_DESCRIPTOR)
@@ -377,7 +380,7 @@ uint8_t *CustomHID_SetReport_Feature(uin
 {
   if (Length == 0)
   {
-    pInformation->Ctrl_Info.Usb_wLength = 2;
+    pInformation->Ctrl_Info.Usb_wLength = wMaxPacketSize;
     return NULL;
   }
   else
@@ -441,7 +444,7 @@ uint8_t *CustomHID_GetConfigDescriptor(u
 uint8_t *CustomHID_GetStringDescriptor(uint16_t Length)
 {
   uint8_t wValue0 = pInformation->USBwValue0;
-  if (wValue0 > 4)
+  if (wValue0 > 3) // bugfix
   {
     return NULL;
   }
diff -purN a/usb_pwr.h b/usb_pwr.h
--- a/usb_pwr.h	2013-01-21 19:27:28.000000000 +0100
+++ b/usb_pwr.h	2014-11-14 18:13:53.700521744 +0100
@@ -30,6 +30,7 @@
 #define __USB_PWR_H
 
 /* Includes ------------------------------------------------------------------*/
+#include "usb_type.h"
 /* Exported types ------------------------------------------------------------*/
 typedef enum _RESUME_STATE
 {
